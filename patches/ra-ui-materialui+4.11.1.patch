diff --git a/node_modules/ra-ui-materialui/dist/cjs/input/AutocompleteInput.js b/node_modules/ra-ui-materialui/dist/cjs/input/AutocompleteInput.js
index 735438d..d309440 100644
--- a/node_modules/ra-ui-materialui/dist/cjs/input/AutocompleteInput.js
+++ b/node_modules/ra-ui-materialui/dist/cjs/input/AutocompleteInput.js
@@ -369,7 +369,7 @@ var AutocompleteInput = function (props) {
     };
     var oneSecondHasPassed = (0, ra_core_1.useTimeout)(1000, filterValue);
     var suggestions = (0, react_1.useMemo)(function () {
-        if (!isFromReference && (matchSuggestion || limitChoicesToValue)) {
+        if (matchSuggestion || limitChoicesToValue) {
             return getSuggestions(filterValue);
         }
         return (finalChoices === null || finalChoices === void 0 ? void 0 : finalChoices.slice(0, suggestionLimit)) || [];
diff --git a/node_modules/ra-ui-materialui/dist/esm/input/AutocompleteInput.js b/node_modules/ra-ui-materialui/dist/esm/input/AutocompleteInput.js
index c95a8c3..0ab451c 100644
--- a/node_modules/ra-ui-materialui/dist/esm/input/AutocompleteInput.js
+++ b/node_modules/ra-ui-materialui/dist/esm/input/AutocompleteInput.js
@@ -340,7 +340,7 @@ export var AutocompleteInput = function (props) {
     };
     var oneSecondHasPassed = useTimeout(1000, filterValue);
     var suggestions = useMemo(function () {
-        if (!isFromReference && (matchSuggestion || limitChoicesToValue)) {
+        if (matchSuggestion || limitChoicesToValue) {
             return getSuggestions(filterValue);
         }
         return (finalChoices === null || finalChoices === void 0 ? void 0 : finalChoices.slice(0, suggestionLimit)) || [];
diff --git a/node_modules/ra-ui-materialui/src/input/AutocompleteInput.tsx b/node_modules/ra-ui-materialui/src/input/AutocompleteInput.tsx
index cc919e1..6df8d59 100644
--- a/node_modules/ra-ui-materialui/src/input/AutocompleteInput.tsx
+++ b/node_modules/ra-ui-materialui/src/input/AutocompleteInput.tsx
@@ -488,8 +488,7 @@ If you provided a React element for the optionText prop, you must also provide t
     );
 
     const filterOptions = (options, params) => {
-        let filteredOptions =
-            isFromReference || // When used inside a reference, AutocompleteInput shouldn't do the filtering as it's done by the reference input
+        let filteredOptions = // When used inside a reference, AutocompleteInput shouldn't do the filtering as it's done by the reference input
             matchSuggestion || // When using element as optionText (and matchSuggestion), options are filtered by getSuggestions, so they shouldn't be filtered here
             limitChoicesToValue // When limiting choices to values (why? it's legacy!), options are also filtered by getSuggestions, so they shouldn't be filtered here
                 ? options
@@ -519,7 +518,7 @@ If you provided a React element for the optionText prop, you must also provide t
     const oneSecondHasPassed = useTimeout(1000, filterValue);
 
     const suggestions = useMemo(() => {
-        if (!isFromReference && (matchSuggestion || limitChoicesToValue)) {
+        if (matchSuggestion || limitChoicesToValue) {
             return getSuggestions(filterValue);
         }
         return finalChoices?.slice(0, suggestionLimit) || [];
